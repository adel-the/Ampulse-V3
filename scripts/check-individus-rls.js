const { createClient } = require('@supabase/supabase-js');
require('dotenv').config({ path: '.env.local' });

const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;
const serviceRoleKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !serviceRoleKey) {
  console.error('‚ùå Variables d\'environnement manquantes');
  console.log('Assurez-vous que .env.local contient:');
  console.log('- NEXT_PUBLIC_SUPABASE_URL');
  console.log('- SUPABASE_SERVICE_ROLE_KEY');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, serviceRoleKey, {
  auth: { persistSession: false }
});

async function checkIndividusRLS() {
  console.log('üîç V√©rification RLS pour la table individus...\n');
  console.log('URL Supabase:', supabaseUrl);
  console.log('‚îÄ'.repeat(50));

  try {
    // 1. Test de lecture
    console.log('\nüìñ Test de LECTURE...');
    const { data: readData, error: readError } = await supabase
      .from('individus')
      .select('*')
      .limit(1);

    if (readError) {
      console.error('‚ùå Erreur de lecture:', readError.message);
    } else {
      console.log('‚úÖ Lecture r√©ussie -', readData?.length || 0, 'ligne(s)');
    }

    // 2. Test de cr√©ation
    console.log('\n‚úçÔ∏è Test de CR√âATION...');
    const testData = {
      usager_id: 1,
      nom: 'TestRLS',
      prenom: 'Debug',
      date_naissance: '2000-01-01',
      relation: 'Autre',
      is_chef_famille: false
    };

    const { data: insertData, error: insertError } = await supabase
      .from('individus')
      .insert(testData)
      .select()
      .single();

    if (insertError) {
      console.error('‚ùå Erreur de cr√©ation:', insertError.message);
      console.error('   Code:', insertError.code);
      console.error('   D√©tails:', insertError.details);
      
      if (insertError.code === '42501') {
        console.log('\n‚ö†Ô∏è Probl√®me RLS d√©tect√©!');
        console.log('La politique RLS bloque la cr√©ation.');
      }
    } else {
      console.log('‚úÖ Cr√©ation r√©ussie - ID:', insertData.id);
      
      // 3. Test de mise √† jour
      console.log('\nüìù Test de MISE √Ä JOUR...');
      const { error: updateError } = await supabase
        .from('individus')
        .update({ nom: 'TestRLS-Updated' })
        .eq('id', insertData.id);

      if (updateError) {
        console.error('‚ùå Erreur de mise √† jour:', updateError.message);
      } else {
        console.log('‚úÖ Mise √† jour r√©ussie');
      }

      // 4. Test de suppression
      console.log('\nüóëÔ∏è Test de SUPPRESSION...');
      const { error: deleteError } = await supabase
        .from('individus')
        .delete()
        .eq('id', insertData.id);

      if (deleteError) {
        console.error('‚ùå Erreur de suppression:', deleteError.message);
      } else {
        console.log('‚úÖ Suppression r√©ussie');
      }
    }

    // 5. R√©sum√© et recommandations
    console.log('\n' + '‚ïê'.repeat(50));
    console.log('üìä R√âSUM√â DU DIAGNOSTIC');
    console.log('‚ïê'.repeat(50));
    
    if (insertError?.code === '42501') {
      console.log('\nüö® Probl√®me d√©tect√©: RLS bloque les op√©rations');
      console.log('\nüí° Solutions recommand√©es:');
      console.log('1. Le hook useIndividus a √©t√© modifi√© pour utiliser supabaseAdmin en d√©veloppement');
      console.log('2. Relancez votre serveur de d√©veloppement: npm run dev');
      console.log('3. Videz le cache du navigateur (Ctrl+Shift+R)');
      console.log('4. Si le probl√®me persiste, ex√©cutez: npx supabase db reset');
    } else {
      console.log('\n‚úÖ Aucun probl√®me RLS d√©tect√©');
      console.log('Les op√©rations CRUD fonctionnent correctement');
    }

    console.log('\nüìù Notes importantes:');
    console.log('- Le hook useIndividus utilise maintenant supabaseAdmin en mode dev');
    console.log('- Cela contourne les probl√®mes RLS en d√©veloppement');
    console.log('- En production, le client normal sera utilis√© avec RLS activ√©');

  } catch (error) {
    console.error('\n‚ùå Erreur inattendue:', error);
  }
}

checkIndividusRLS();